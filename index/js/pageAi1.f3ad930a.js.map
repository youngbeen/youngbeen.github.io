{"version":3,"sources":["webpack:///./src/views/PageAi1.vue?36d6","webpack:///./src/views/PageAi1.vue?8bca","webpack:///src/views/PageAi1.vue","webpack:///./src/views/PageAi1.vue?4bd1","webpack:///./src/views/PageAi1.vue"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","name","methods","component"],"mappings":"2GAAA,W,yCCAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,UAAU,CAACG,YAAY,YAAY,CAACH,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,KAAK,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACG,YAAY,QAAQ,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,eAAeJ,EAAG,MAAM,CAACG,YAAY,cAAc,CAACR,EAAIS,GAAG,wMAAwMJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,wDAAwDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0DAA0DJ,EAAG,MAAM,CAACG,YAAY,cAAc,CAACR,EAAIS,GAAG,gIAAgIJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wFAAwFJ,EAAG,SAAS,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,SAAS,CAACL,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,+CAA+CJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,IAAI,CAACL,EAAIS,GAAG,sBCyCv2C,GACEC,KAAM,MACNC,QAAS,IC5CsU,I,wBCQ7UC,EAAY,eACd,EACAb,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAK,E","file":"js/pageAi1.f3ad930a.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageAi1.vue?vue&type=style&index=0&id=90025b8c&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"bed-page\"},[_c('div',{staticClass:\"box-text\"},[_c('h3',[_vm._v(\"NumPy中dot方法矩阵积算法解析\")]),_c('p',[_vm._v(\" 在NumPy中，有一个内置方法\"),_c('span',{staticClass:\"code\"},[_vm._v(\"numpy.dot\")]),_vm._v(\"，使用方法如下： \")]),_c('pre',{staticClass:\"code-block\"},[_vm._v(\">>> a = np.array([[1, 1], [0, 1]])\\n>>> b = np.array([[2, 0], [3, 4]])\\n>>> np.dot(a, b)\\n    array([[5, 4],\\n           [3, 4]])\\n>>> np.dot(b, a)\\n    array([[2, 2],\\n           [3, 7]])\\n    \")]),_c('p',[_vm._v(\" 究竟多维数组是如何运算得出最终的结果的？\"),_c('strong',[_vm._v(\"第R行第C列的结果 = 第一个矩阵的R行所有数据 * 第二个矩阵的C列所有数据 后的所有数据之和\")])]),_c('p',[_vm._v(\" 具体解释一下，例如上面的例子中，我们先把多维数组用矩阵的形式表现出来，假设我们需要计算出来的结果是c \")]),_c('pre',{staticClass:\"code-block\"},[_vm._v(\"a               b                c\\n1, 1            2, 0             ?1, ?2\\n0, 1            3, 4             ?3, ?4\\n    \")]),_c('p',[_vm._v(\" 按照上面的规则来试着计算一下，?1是第1行第1列，所以?1的结果应该是a的第一行所有数据，即1, 1分别乘以b的第一列的所有数据，即2, 3之后的总和。那么最终结果是\"),_c('strong',[_vm._v(\"?1 = 1 * 2 + 1 * 3 = 5\")])]),_c('p',[_vm._v(\" 同理，\"),_c('strong',[_vm._v(\"?2 = 1 * 0 + 1 * 4 = 4\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"?3 = 0 * 2 + 1 * 3 = 3\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"?4 = 0 * 0 + 1 * 4 = 4\")]),_vm._v(\"。即最终的结果就是5, 4, 3, 4。另外一个矩阵积运算是同样的操作方式。 \")])]),_c('div',{staticClass:\"box-tip\"},[_c('p',[_vm._v(\"2018-05-22\")])])])}]\n\nexport { render, staticRenderFns }","<template>\n  <section class=\"bed-page\">\n    <div class=\"box-text\">\n      <h3>NumPy中dot方法矩阵积算法解析</h3>\n      <p>\n        在NumPy中，有一个内置方法<span class=\"code\">numpy.dot</span>，使用方法如下：\n      </p>\n      <pre class=\"code-block\">\n  >>> a = np.array([[1, 1], [0, 1]])\n  >>> b = np.array([[2, 0], [3, 4]])\n  >>> np.dot(a, b)\n      array([[5, 4],\n             [3, 4]])\n  >>> np.dot(b, a)\n      array([[2, 2],\n             [3, 7]])\n      </pre>\n      <p>\n        究竟多维数组是如何运算得出最终的结果的？<strong>第R行第C列的结果 = 第一个矩阵的R行所有数据 * 第二个矩阵的C列所有数据 后的所有数据之和</strong>\n      </p>\n      <p>\n        具体解释一下，例如上面的例子中，我们先把多维数组用矩阵的形式表现出来，假设我们需要计算出来的结果是c\n      </p>\n      <pre class=\"code-block\">\n  a               b                c\n  1, 1            2, 0             ?1, ?2\n  0, 1            3, 4             ?3, ?4\n      </pre>\n      <p>\n        按照上面的规则来试着计算一下，?1是第1行第1列，所以?1的结果应该是a的第一行所有数据，即1, 1分别乘以b的第一列的所有数据，即2, 3之后的总和。那么最终结果是<strong>?1 = 1 * 2 + 1 * 3 = 5</strong>\n      </p>\n      <p>\n        同理，<strong>?2 = 1 * 0 + 1 * 4 = 4</strong>，<strong>?3 = 0 * 2 + 1 * 3 = 3</strong>，<strong>?4 = 0 * 0 + 1 * 4 = 4</strong>。即最终的结果就是5, 4, 3, 4。另外一个矩阵积运算是同样的操作方式。\n      </p>\n    </div>\n    <div class=\"box-tip\">\n      <p>2018-05-22</p>\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'ai1',\n  methods: {\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.bed-page {\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: 600px;\n  height: 100%;\n  padding: 12px 24px;\n  overflow-y: auto;\n  .box-text {\n    padding: 6px 0;\n    letter-spacing: 0.1em;\n    .code {\n      // border: 1px solid rgb(233, 97, 97);\n      padding: 0 6px;\n      border-radius: 3px;\n      background: #fcedea;\n      color: #c0341d;\n    }\n    .code-block {\n      padding: 6px;\n      border-radius: 3px;\n      background: #fcedea;\n      color: #c0341d;\n    }\n  }\n  .box-btn {\n    text-align: center;\n    .big-btn {\n      display: inline-block;\n      padding: 6px 18px;\n      border: 1px solid rgb(84, 202, 80);\n      border-radius: 4px;\n      color: #fff;\n      background: rgba(84, 202, 80, 1);\n      font-size: 16px;\n      cursor: pointer;\n    }\n    .big-btn:hover {\n      color: #fff;\n      background: rgba(84, 202, 80, 0.6);\n    }\n  }\n  .box-tip {\n    padding: 0 36px;\n    color: #bdbdbd;\n    font-size: 12px;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageAi1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageAi1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PageAi1.vue?vue&type=template&id=90025b8c&scoped=true&\"\nimport script from \"./PageAi1.vue?vue&type=script&lang=js&\"\nexport * from \"./PageAi1.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PageAi1.vue?vue&type=style&index=0&id=90025b8c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"90025b8c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}