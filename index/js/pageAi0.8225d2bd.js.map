{"version":3,"sources":["webpack:///./src/views/PageAi0.vue?0f97","webpack:///./src/views/PageAi0.vue?d9f0","webpack:///src/views/PageAi0.vue","webpack:///./src/views/PageAi0.vue?b5e5","webpack:///./src/views/PageAi0.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","on","goLink","_m","staticRenderFns","name","methods","window","open","component"],"mappings":"yGAAA,W,kECAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,+BAA+BH,EAAG,IAAI,CAACE,YAAY,SAAS,CAACF,EAAG,OAAO,CAACE,YAAY,OAAOE,GAAG,CAAC,MAAQR,EAAIS,SAAS,CAACT,EAAIO,GAAG,cAAcP,EAAIO,GAAG,wEAAwEH,EAAG,KAAK,CAACJ,EAAIO,GAAG,wBAAwBH,EAAG,IAAI,CAACJ,EAAIO,GAAG,+IAA+IH,EAAG,IAAI,CAACJ,EAAIO,GAAG,qFAAqFH,EAAG,IAAI,CAACJ,EAAIO,GAAG,yEAAyEH,EAAG,IAAI,CAACE,YAAY,SAAS,CAACN,EAAIO,GAAG,wFAAwFH,EAAG,KAAK,CAACJ,EAAIO,GAAG,UAAUH,EAAG,IAAI,CAACJ,EAAIO,GAAG,8CAA8CH,EAAG,IAAI,CAACJ,EAAIO,GAAG,iLAAiLH,EAAG,IAAI,CAACJ,EAAIO,GAAG,yFAAyFH,EAAG,IAAI,CAACJ,EAAIO,GAAG,8JAA8JH,EAAG,IAAI,CAACJ,EAAIO,GAAG,ybAAybH,EAAG,KAAK,CAACJ,EAAIO,GAAG,qBAAqBH,EAAG,IAAI,CAACJ,EAAIO,GAAG,kdAAkdH,EAAG,KAAK,CAACJ,EAAIO,GAAG,mBAAmBH,EAAG,IAAI,CAACJ,EAAIO,GAAG,0PAA0PH,EAAG,KAAK,CAACJ,EAAIO,GAAG,YAAYH,EAAG,IAAI,CAACJ,EAAIO,GAAG,qRAAqRH,EAAG,IAAI,CAACJ,EAAIO,GAAG,sJAAsJH,EAAG,KAAK,CAACJ,EAAIO,GAAG,UAAUP,EAAIU,GAAG,KAAKV,EAAIU,GAAG,MACtsGC,EAAkB,CAAC,WAAa,IAAIX,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,iBAAiBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,gBAAgBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,wDAAwDH,EAAG,KAAK,CAACJ,EAAIO,GAAG,gGAAgGH,EAAG,KAAK,CAACJ,EAAIO,GAAG,gCAAgCH,EAAG,KAAK,CAACJ,EAAIO,GAAG,4CAA4CH,EAAG,KAAK,CAACJ,EAAIO,GAAG,YAAYH,EAAG,KAAK,CAACJ,EAAIO,GAAG,2EAA2E,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,IAAI,CAACJ,EAAIO,GAAG,oBCwE3tB,GACEK,KAAM,MACNC,QAAS,CACPJ,OADJ,WAEMK,OAAOC,KAAK,gCC7E+T,I,wBCQ7UC,EAAY,eACd,EACAjB,EACAY,GACA,EACA,KACA,WACA,MAIa,aAAAK,E","file":"js/pageAi0.8225d2bd.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageAi0.vue?vue&type=style&index=0&id=75f2eae0&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"bed-page\"},[_c('div',{staticClass:\"box-text\"},[_c('h3',[_vm._v(\"人工智能是一门结合数学理论 + 工程实践的技术领域\")]),_c('p',{staticClass:\"quote\"},[_c('span',{staticClass:\"link\",on:{\"click\":_vm.goLink}},[_vm._v(\"coursera\")]),_vm._v(\" 是一个非常好的学习网站，集中了全球的精品课程。相关知识学习都可以在上面找到合适的课程，我们需要学习数学和机器学习算法推荐一些课程 \")]),_c('h3',[_vm._v(\"人工智能，机器学习能解决什么样的问题\")]),_c('p',[_vm._v(\" 1.分类问题 根据数据样本上抽取出的特征，判定其属于有限个类别中的哪一个。比如： 垃圾邮件识别(结果类别：1、垃圾邮件 2、正常邮件) 文本情感褒贬分析(结果类别：1、褒 2、贬) 图像内容识别识别(结果类别：1、喵星人 2、汪星人 3、人类 4、草泥马 5、都不是)。 \")]),_c('p',[_vm._v(\" 2.回归问题 根据数据样本上抽取出的特征，预测一个连续值的结果。比如： 星爷《美人鱼》票房 大帝都2个月后的房价 隔壁熊孩子一天来你家几次，宠幸你多少玩具 \")]),_c('p',[_vm._v(\" 3.聚类等问题 根据数据样本上抽取出的特征，让样本抱抱团(相近/相关的样本在一团内)。比如： google的新闻分类 用户群体划分 \")]),_c('p',{staticClass:\"quote\"},[_vm._v(\" 我们再把上述常见问题划到机器学习最典型的2个分类上。 分类与回归问题需要用已知结果的数据做训练，属于“监督学习” 聚类的问题不需要已知标签，属于“非监督学习”。 \")]),_c('h3',[_vm._v(\"数学理论\")]),_c('p',[_vm._v(\"基本所有常见机器学习算法需要的数学基础，都集中在微积分、线性代数和概率与统计当中\")]),_c('p',[_vm._v(\"微分的计算及其几何、物理含义，是机器学习中大多数算法的求解过程的核心。比如算法中运用到梯度下降法、牛顿法等。如果对其几何意义有充分的理解，就能理解“梯度下降是用平面来逼近局部，牛顿法是用曲面逼近局部”，能够更好地理解运用这样的方法。 凸优化和条件最优化 的相关知识在算法中的应用随处可见，如果能有系统的学习将使得你对算法的认识达到一个新高度。\")]),_c('p',[_vm._v(\"大多数的循环操作可转化成矩阵之间的乘法运算，向量的内积运算更是随处可见。矩阵乘法与分解在机器学习的主成分分析（PCA）和奇异值分解（SVD） 等部分呈现刷屏状地出现。\")]),_c('p',[_vm._v(\"从广义来说，机器学习在做的很多事情，和统计层面数据分析和发掘隐藏的模式，是非常类似的。 极大似然思想、贝叶斯模型 是理论基础，朴素贝叶斯(Naïve Bayes )、语言模型(N-gram)、隐马尔科夫（HMM）、隐变量混合概率模型是他们的高级形态。 常见分布如高斯分布是混合高斯模型(GMM)等的基础。\")]),_c('p',[_vm._v(\" 绝大多数问题用典型机器学习的算法都能解决，粗略地列举一下这些方法如下： 处理分类问题的常用算法包括：逻辑回归(工业界最常用)，支持向量机，随机森林，朴素贝叶斯(NLP中常用)，深度神经网络(视频、图片、语音等多媒体数据中使用)。 处理回归问题的常用算法包括：线性回归，普通最小二乘回归（Ordinary Least Squares Regression），逐步回归（Stepwise Regression），多元自适应回归样条（Multivariate Adaptive Regression Splines） 处理聚类问题的常用算法包括：K均值（K-means），基于密度聚类，LDA等等。 降维的常用算法包括：主成分分析（PCA）,奇异值分解（SVD） 等。 推荐系统的常用算法：协同过滤算法 模型融合(model ensemble)和提升(boosting)的算法包括：bagging，adaboost，GBDT，GBRT 其他很重要的算法包括：EM算法等等。 \")]),_c('h3',[_vm._v(\"Python语言及其模块的应用\")]),_c('p',[_vm._v(\" 网页爬虫: scrapy 数据挖掘: pandas：模拟R，进行数据浏览与预处理。 numpy：数组运算。 scipy：高效的科学计算。 matplotlib：非常方便的数据可视化工具。 机器学习: scikit-learn：远近闻名的机器学习package。未必是最高效的，但是接口真心封装得好，几乎所有的机器学习算法输入输出部分格式都一致。而它的支持文档甚至可以直接当做教程来学习，非常用心。对于不是非常高纬度、高量级的数据，scikit-learn胜任得非常好(有兴趣可以看看sklearn的源码，也很有意思)。 libsvm：高效率的svm模型实现(了解一下很有好处，libsvm的系数数据输入格式，在各处都非常常见) keras/TensorFlow：对深度学习感兴趣的同学，也能很方便地搭建自己的神经网络了。 自然语言处理: nltk：自然语言处理的相关功能做得非常全面，有典型语料库，而且上手也非常容易。 交互式环境： ipython notebook：能直接打通数据到结果的通道，方便至极。强力推荐。 \")]),_c('h3',[_vm._v(\"除了算法，数据处理同样重要\")]),_c('p',[_vm._v(\" 特征预处理、数据清洗是很关键的步骤，往往能够使得算法的效果和性能得到显著提高。归一化、离散化、因子化、缺失值处理、去除共线性等，数据挖掘过程中很多时间就花在它们上面。这些工作简单可复制，收益稳定可预期，是机器学习的基础必备步骤。 筛选出显著特征、摒弃非显著特征，需要机器学习工程师反复理解业务。这对很多结果有决定性的影响。特征选择好了，非常简单的算法也能得出良好、稳定的结果。这需要运用特征有效性分析的相关技术，如相关系数、卡方检验、平均互信息、条件熵、后验概率、逻辑回归权重等方法。 \")]),_c('h3',[_vm._v(\"算法模型调优\")]),_c('p',[_vm._v(\" 如何确定模型调优的方向与思路呢？这就需要对模型进行诊断的技术。 过拟合、欠拟合 判断是模型诊断中至关重要的一步。常见的方法如交叉验证，绘制学习曲线等。过拟合的基本调优思路是增加数据量，降低模型复杂度。欠拟合的基本调优思路是提高特征数量和质量，增加模型复杂度。 误差分析 也是机器学习至关重要的步骤。通过观察误差样本，全面分析误差产生误差的原因:是参数的问题还是算法选择的问题，是特征的问题还是数据本身的问题…… 诊断后的模型需要进行调优，调优后的新模型需要重新进行诊断，这是一个反复迭代不断逼近的过程，需要不断地尝试， 进而达到最优状态。 \")]),_c('p',[_vm._v(\" 一般来说，模型融合后都能使得效果有一定提升。而且效果很好。 工程上，主要提升算法准确度的方法是分别在模型的前端（特征清洗和预处理，不同的采样模式）与后端（模型融合）上下功夫。因为他们比较标准可复制，效果比较稳定。而直接调参的工作不会很多，毕竟大量数据训练起来太慢了，而且效果难以保证。 \")]),_c('h3',[_vm._v(\"学习路线\")]),_vm._m(0)]),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('ul',[_c('li',[_vm._v(\"Python语言的学习\")]),_c('li',[_vm._v(\"NumPy模块的使用\")]),_c('li',[_vm._v(\"Pandas数据分析的使用（基本数据对象及操作，数据清洗，数据合并及分组，数据可视化Seaborn）\")]),_c('li',[_vm._v(\"机器学习（kNN，线性回归，逻辑回归及Softmax回归，决策树，支持向量机SVM，主成分分析PCA，模型调优，特征工程，模型评价指标，集成学习Ensemble learning）\")]),_c('li',[_vm._v(\"图像数据挖掘（opencv，k-means聚类算法）\")]),_c('li',[_vm._v(\"文本数据挖掘（自然语言处理及NLTK，文本预处理，文本特征提取，朴素贝叶斯）\")]),_c('li',[_vm._v(\"量化数据分析\")]),_c('li',[_vm._v(\"深度学习（人工神经网络ANN，深度学习框架，卷积神经网络CNN，循环神经网络RNN，长短时记忆网络LSTM，seq2seq模型）\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"box-tip\"},[_c('p',[_vm._v(\"2018-05-15\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <section class=\"bed-page\">\n    <div class=\"box-text\">\n      <h3>人工智能是一门结合数学理论 + 工程实践的技术领域</h3>\n      <p class=\"quote\">\n        <span class=\"link\" @click=\"goLink\">coursera</span>  是一个非常好的学习网站，集中了全球的精品课程。相关知识学习都可以在上面找到合适的课程，我们需要学习数学和机器学习算法推荐一些课程\n      </p>\n\n      <h3>人工智能，机器学习能解决什么样的问题</h3>\n      <p>\n        1.分类问题\n根据数据样本上抽取出的特征，判定其属于有限个类别中的哪一个。比如： 垃圾邮件识别(结果类别：1、垃圾邮件 2、正常邮件) 文本情感褒贬分析(结果类别：1、褒 2、贬) 图像内容识别识别(结果类别：1、喵星人 2、汪星人 3、人类 4、草泥马 5、都不是)。\n      </p>\n      <p>\n        2.回归问题\n根据数据样本上抽取出的特征，预测一个连续值的结果。比如： 星爷《美人鱼》票房 大帝都2个月后的房价 隔壁熊孩子一天来你家几次，宠幸你多少玩具\n      </p>\n      <p>\n        3.聚类等问题\n根据数据样本上抽取出的特征，让样本抱抱团(相近/相关的样本在一团内)。比如： google的新闻分类 用户群体划分\n      </p>\n      <p class=\"quote\">\n        我们再把上述常见问题划到机器学习最典型的2个分类上。 分类与回归问题需要用已知结果的数据做训练，属于“监督学习” 聚类的问题不需要已知标签，属于“非监督学习”。\n      </p>\n\n      <h3>数学理论</h3>\n      <p>基本所有常见机器学习算法需要的数学基础，都集中在微积分、线性代数和概率与统计当中</p>\n      <p>微分的计算及其几何、物理含义，是机器学习中大多数算法的求解过程的核心。比如算法中运用到梯度下降法、牛顿法等。如果对其几何意义有充分的理解，就能理解“梯度下降是用平面来逼近局部，牛顿法是用曲面逼近局部”，能够更好地理解运用这样的方法。 凸优化和条件最优化 的相关知识在算法中的应用随处可见，如果能有系统的学习将使得你对算法的认识达到一个新高度。</p>\n      <p>大多数的循环操作可转化成矩阵之间的乘法运算，向量的内积运算更是随处可见。矩阵乘法与分解在机器学习的主成分分析（PCA）和奇异值分解（SVD） 等部分呈现刷屏状地出现。</p>\n      <p>从广义来说，机器学习在做的很多事情，和统计层面数据分析和发掘隐藏的模式，是非常类似的。 极大似然思想、贝叶斯模型 是理论基础，朴素贝叶斯(Naïve Bayes )、语言模型(N-gram)、隐马尔科夫（HMM）、隐变量混合概率模型是他们的高级形态。 常见分布如高斯分布是混合高斯模型(GMM)等的基础。</p>\n      <p>\n        绝大多数问题用典型机器学习的算法都能解决，粗略地列举一下这些方法如下： 处理分类问题的常用算法包括：逻辑回归(工业界最常用)，支持向量机，随机森林，朴素贝叶斯(NLP中常用)，深度神经网络(视频、图片、语音等多媒体数据中使用)。 处理回归问题的常用算法包括：线性回归，普通最小二乘回归（Ordinary Least Squares Regression），逐步回归（Stepwise Regression），多元自适应回归样条（Multivariate Adaptive Regression Splines） 处理聚类问题的常用算法包括：K均值（K-means），基于密度聚类，LDA等等。 降维的常用算法包括：主成分分析（PCA）,奇异值分解（SVD） 等。 推荐系统的常用算法：协同过滤算法 模型融合(model ensemble)和提升(boosting)的算法包括：bagging，adaboost，GBDT，GBRT 其他很重要的算法包括：EM算法等等。\n      </p>\n\n      <h3>Python语言及其模块的应用</h3>\n      <p>\n        网页爬虫: scrapy 数据挖掘: pandas：模拟R，进行数据浏览与预处理。 numpy：数组运算。 scipy：高效的科学计算。 matplotlib：非常方便的数据可视化工具。 机器学习: scikit-learn：远近闻名的机器学习package。未必是最高效的，但是接口真心封装得好，几乎所有的机器学习算法输入输出部分格式都一致。而它的支持文档甚至可以直接当做教程来学习，非常用心。对于不是非常高纬度、高量级的数据，scikit-learn胜任得非常好(有兴趣可以看看sklearn的源码，也很有意思)。 libsvm：高效率的svm模型实现(了解一下很有好处，libsvm的系数数据输入格式，在各处都非常常见) keras/TensorFlow：对深度学习感兴趣的同学，也能很方便地搭建自己的神经网络了。 自然语言处理: nltk：自然语言处理的相关功能做得非常全面，有典型语料库，而且上手也非常容易。 交互式环境： ipython notebook：能直接打通数据到结果的通道，方便至极。强力推荐。\n      </p>\n\n      <h3>除了算法，数据处理同样重要</h3>\n      <p>\n        特征预处理、数据清洗是很关键的步骤，往往能够使得算法的效果和性能得到显著提高。归一化、离散化、因子化、缺失值处理、去除共线性等，数据挖掘过程中很多时间就花在它们上面。这些工作简单可复制，收益稳定可预期，是机器学习的基础必备步骤。 筛选出显著特征、摒弃非显著特征，需要机器学习工程师反复理解业务。这对很多结果有决定性的影响。特征选择好了，非常简单的算法也能得出良好、稳定的结果。这需要运用特征有效性分析的相关技术，如相关系数、卡方检验、平均互信息、条件熵、后验概率、逻辑回归权重等方法。\n      </p>\n\n      <h3>算法模型调优</h3>\n      <p>\n        如何确定模型调优的方向与思路呢？这就需要对模型进行诊断的技术。 过拟合、欠拟合 判断是模型诊断中至关重要的一步。常见的方法如交叉验证，绘制学习曲线等。过拟合的基本调优思路是增加数据量，降低模型复杂度。欠拟合的基本调优思路是提高特征数量和质量，增加模型复杂度。 误差分析 也是机器学习至关重要的步骤。通过观察误差样本，全面分析误差产生误差的原因:是参数的问题还是算法选择的问题，是特征的问题还是数据本身的问题…… 诊断后的模型需要进行调优，调优后的新模型需要重新进行诊断，这是一个反复迭代不断逼近的过程，需要不断地尝试， 进而达到最优状态。\n      </p>\n      <p>\n        一般来说，模型融合后都能使得效果有一定提升。而且效果很好。 工程上，主要提升算法准确度的方法是分别在模型的前端（特征清洗和预处理，不同的采样模式）与后端（模型融合）上下功夫。因为他们比较标准可复制，效果比较稳定。而直接调参的工作不会很多，毕竟大量数据训练起来太慢了，而且效果难以保证。\n      </p>\n\n      <h3>学习路线</h3>\n      <p>\n        <ul>\n          <li>Python语言的学习</li>\n          <li>NumPy模块的使用</li>\n          <li>Pandas数据分析的使用（基本数据对象及操作，数据清洗，数据合并及分组，数据可视化Seaborn）</li>\n          <li>机器学习（kNN，线性回归，逻辑回归及Softmax回归，决策树，支持向量机SVM，主成分分析PCA，模型调优，特征工程，模型评价指标，集成学习Ensemble learning）</li>\n          <li>图像数据挖掘（opencv，k-means聚类算法）</li>\n          <li>文本数据挖掘（自然语言处理及NLTK，文本预处理，文本特征提取，朴素贝叶斯）</li>\n          <li>量化数据分析</li>\n          <li>深度学习（人工神经网络ANN，深度学习框架，卷积神经网络CNN，循环神经网络RNN，长短时记忆网络LSTM，seq2seq模型）</li>\n        </ul>\n      </p>\n    </div>\n    <div class=\"box-tip\">\n      <p>2018-05-15</p>\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'ai0',\n  methods: {\n    goLink () {\n      window.open('https://www.coursera.org/')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.bed-page {\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: 600px;\n  height: 100%;\n  padding: 12px 24px;\n  overflow-y: auto;\n  .box-text {\n    padding: 6px 0;\n    letter-spacing: 0.1em;\n  }\n  .box-btn {\n    text-align: center;\n    .big-btn {\n      display: inline-block;\n      padding: 6px 18px;\n      border: 1px solid rgb(84, 202, 80);\n      border-radius: 4px;\n      color: #fff;\n      background: rgba(84, 202, 80, 1);\n      font-size: 16px;\n      cursor: pointer;\n    }\n    .big-btn:hover {\n      color: #fff;\n      background: rgba(84, 202, 80, 0.6);\n    }\n  }\n  .box-tip {\n    padding: 0 36px;\n    color: #bdbdbd;\n    font-size: 12px;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageAi0.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageAi0.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PageAi0.vue?vue&type=template&id=75f2eae0&scoped=true&\"\nimport script from \"./PageAi0.vue?vue&type=script&lang=js&\"\nexport * from \"./PageAi0.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PageAi0.vue?vue&type=style&index=0&id=75f2eae0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"75f2eae0\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}